---
- name: "1. Download the file"
  hosts: localhost
  vars:
    file_url: "{{ file_download_url }}"
    file_dest: "{{ file_download_dest }}"
  tasks:
    - name: Download the file
      block:
        - name: Download information
          debug:
            msg: "url={{ file_url }}    dest={{ file_dest }}"

        - name: 1-1 Download the file
          get_url:
            url: "{{ file_url }}"
            dest: "{{ file_dest }}/{{ file_url.split('/')[-1] }}"
          register: download_result

        - name: Set download result as a global fact
          set_fact:
            downloaded_file: "{{ download_result.dest }}"
            cacheable: true

        - name: Get file stats
          stat:
            path: "{{ downloaded_file }}"
          register: file_info
          no_log: true

        - name: Calculate MD5 checksum
          shell: "md5sum {{ downloaded_file }} | awk '{ print $1 }'"
          register: md5_result
          no_log: true

        - name: 1-2 Download completed
          debug:
            msg: "file={{ downloaded_file }}    size={{ (file_info.stat.size / 1024 / 1024) | round(2) }}MB     MD5={{ md5_result.stdout }}"

      rescue:
        - name: 1-2 ERROR found
          debug:
            msg: "Downloading file has an issue. Please check the config"
          
        - name: 1-3 EXIT playbook
          fail:
            msg: "Stopping the playbook because the file download failed"

- name: "2. Deploy file to servers"
  hosts: target_svr
  pre_tasks:
    - name: Set current time variable
      set_fact:
        current_time: "{{ lookup('pipe', 'date +%Y%m%d-%H%M%S') }}"
      no_log: true

    - name: Set deploy directory variable
      set_fact:
        deploy_dir: "/data/deploy/ansible-deploy-{{ current_time }}"
      no_log: true

    - name: Display host name and IP address
      debug:
        msg: "Deploying on host: {{ inventory_hostname }}"

    - name: Display deploy directory
      debug:
        msg: "Deployment directory is set to: {{ deploy_dir }}"

  tasks:
    - name: 2-1 Create the deploy directory
      file:
        path: "{{ deploy_dir }}"
        state: directory
        mode: '0755'

    - name: 2-2 Copy the file to the target server
      copy:
        src: "{{ downloaded_file }}"
        dest: "{{ deploy_dir }}"
